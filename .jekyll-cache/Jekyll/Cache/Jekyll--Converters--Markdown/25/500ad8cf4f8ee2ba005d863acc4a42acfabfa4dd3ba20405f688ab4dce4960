I"*0<h2 id="1-创建database">1. 创建database</h2>
<p>此处创建account表，有三个field，分别为:<br />
<strong>id(primary key, auto increment)<br />
name(varchar)<br />
money(double)</strong></p>
<h2 id="2-创建maven-project添加相关dependences">2. 创建maven project，添加相关dependences</h2>
<h3 id="spring-and-springmvc">Spring and SpringMVC</h3>
<p>spring-context<br />
aspectjweaver<br />
spring-jdbc<br />
spring-tx<br />
spring-test<br />
spring-webmvc</p>
<h3 id="servlet-and-jsp">servlet and jsp</h3>
<p>servlet-api<br />
jsp-api</p>
<h3 id="mybatis">mybatis</h3>
<p>mybatis<br />
mybatis-spring(Spring与mybatis整合)<br />
mysql-connector-java<br />
c3p0<br />
junit<br />
jstl</p>
<h2 id="3-创建实体account">3. 创建实体Account</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class Account {
    private Integer id;
    private String name;
    private Double money;

    // Getter and Setter
}
</code></pre></div></div>
<h2 id="4-mapper接口">4. Mapper接口</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public interface AccountMapper {
    // save an Account
    void save(Account account);

    // list all of Account data in the database
    List&lt;Account&gt; findAll();
}
</code></pre></div></div>
<h2 id="5-service层接口与实现">5. Service层接口与实现</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public interface AccountService {
    void save(Account account);

    List&lt;Account&gt; findAll();
}
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class AccountServiceImpl implements AccountService {
    @Override
    public void save(Account account) {

    }

    @Override
    public List&lt;Account&gt; findAll() {
        return null;
    }
}
</code></pre></div></div>
<h3 id="6-controller层">6. Controller层</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class AccountController {
    public String save(Account account) {
        return null;
    }

    public ModelAndView findAll() {
        return null;
    }
}
</code></pre></div></div>
<h2 id="7-创建相关jsp页面">7. 创建相关JSP页面</h2>
<h2 id="8-创建配置文件">8. 创建配置文件</h2>
<h3 id="jdbcproperties">jdbc.properties</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jdbc.driver=com.mysql.cj.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/your database name?serverTimezone=UTC
jdbc.username=****
jdbc.password=****
</code></pre></div></div>
<h3 id="applicationcontextxml">applicationContext.xml</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd"&gt;
    &lt;!--    组件扫描，mapper和service，排除controller--&gt;
    &lt;context:component-scan base-package="com.jadon"&gt;
        &lt;context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/&gt;
    &lt;/context:component-scan&gt;
&lt;/beans&gt;
</code></pre></div></div>

<h3 id="spring-mvcxml">spring-mvc.xml</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd"&gt;
    &lt;!--    自建扫描，controller--&gt;
    &lt;context:component-scan base-package="com.jadon.controller"/&gt;
    &lt;!--    注解驱动--&gt;
    &lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;
    &lt;!--    内部视图资源解析器--&gt;
    &lt;bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"&gt;
        &lt;property name="prefix" value="/WEB-INF/page/"/&gt;
        &lt;property name="suffix" value=".jsp"/&gt;
    &lt;/bean&gt;
    &lt;!--    开放资源--&gt;
    &lt;mvc:default-servlet-handler&gt;&lt;/mvc:default-servlet-handler&gt;
&lt;/beans&gt;
</code></pre></div></div>

<h3 id="webxml">web.xml</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0"&gt;
    &lt;!--    Spring监听器--&gt;
    &lt;context-param&gt;
        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
        &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;
    &lt;/context-param&gt;
    &lt;listener&gt;
        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
    &lt;/listener&gt;
    &lt;!--    SpringMVC前端控制器--&gt;
    &lt;servlet&gt;
        &lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
            &lt;param-value&gt;classpath:spring-mvc.xml&lt;/param-value&gt;
        &lt;/init-param&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
    &lt;!--    乱码过滤器--&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name&gt;encoding&lt;/param-name&gt;
            &lt;param-value&gt;UTF-8&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre></div></div>

<h3 id="accountmapperxmlcomjadonmapper">AccountMapper.xml(com.jadon.mapper)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;
&lt;mapper namespace="com.jadon.mapper.AccountMapper"&gt;
    &lt;insert id="save" parameterType="account"&gt;
        insert into account values (#{id},#{name},#{money})
    &lt;/insert&gt;

    &lt;select id="findAll" resultType="account"&gt;
        select * from account
    &lt;/select&gt;
&lt;/mapper&gt;
</code></pre></div></div>

<h3 id="sqlmapconfigxml">sqlMapConfig.xml</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;
&lt;configuration&gt;
    &lt;!--    引入properties--&gt;
    &lt;properties resource="jdbc.properties"/&gt;

    &lt;!--    定义别名--&gt;
    &lt;typeAliases&gt;
        &lt;package name="com.jadon.domain"/&gt;
    &lt;/typeAliases&gt;

    &lt;!--    环境--&gt;
    &lt;environments default="development"&gt;
        &lt;environment id="development"&gt;
            &lt;transactionManager type="JDBC"&gt;&lt;/transactionManager&gt;
            &lt;dataSource type="POOLED"&gt;
                &lt;property name="driver" value="${jdbc.driver}"/&gt;
                &lt;property name="url" value="${jdbc.url}"/&gt;
                &lt;property name="username" value="${jdbc.username}"/&gt;
                &lt;property name="password" value="${jdbc.password}"/&gt;
            &lt;/dataSource&gt;
        &lt;/environment&gt;
    &lt;/environments&gt;

    &lt;!--    加载映射--&gt;
    &lt;mappers&gt;
        &lt;package name="com.jadon.mapper"/&gt;
    &lt;/mappers&gt;
&lt;/configuration&gt;
</code></pre></div></div>
<h2 id="9-业务实现">9. 业务实现</h2>
<h3 id="controller">controller</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@Controller
@RequestMapping(value = "/account",produces = "text/html;charset=UTF-8")//produces 更改response编码，防止乱码
public class AccountController {
    @Autowired
    private AccountService accountService;

    @RequestMapping("/save")
    @ResponseBody
    public String save(Account account) {
        accountService.save(account);
        return "保存成功";
    }

    @RequestMapping("/findAll")
    public ModelAndView findAll() {
        List&lt;Account&gt; accountList = accountService.findAll();
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.addObject("accountList",accountList);
        modelAndView.setViewName("accountList");
        return modelAndView;
    }
</code></pre></div></div>

<h3 id="service">service</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@Service("accountService")
public class AccountServiceImpl implements AccountService {

    @Override
    public void save(Account account) {
        try {
            InputStream resource = Resources.getResourceAsStream("sqlMapConfig.xml");
            SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(resource);
            SqlSession sqlSession = factory.openSession();
            AccountMapper mapper = sqlSession.getMapper(AccountMapper.class);
            mapper.save(account);
            sqlSession.commit();
            sqlSession.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    public List&lt;Account&gt; findAll() {
        try {
            InputStream resource = Resources.getResourceAsStream("sqlMapConfig.xml");
            SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(resource);
            SqlSession sqlSession = factory.openSession();
            AccountMapper mapper = sqlSession.getMapper(AccountMapper.class);
            List&lt;Account&gt; accountList = mapper.findAll();
            sqlSession.close();
            return accountList;
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }
}
</code></pre></div></div>

:ET